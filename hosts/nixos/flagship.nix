{ lib, config, pkgs, modulesPath, suites, ... }:
{
  ### root password is empty by default ###
  imports = suites.base;

  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ] ++ suites.base;

  networking.hostName = "flagship";
  networking.networkmanager.enable = true;

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/31731f44-3878-4319-b901-b1c226ed2f79";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-4e5782b7-f468-438d-a58f-0fa5712d1d84".device = "/dev/disk/by-uuid/4e5782b7-f468-438d-a58f-0fa5712d1d84";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/430C-3F08";
      fsType = "vfat";
    };

  swapDevices = [ ];

  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/31731f44-3878-4319-b901-b1c226ed2f79";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-4e5782b7-f468-438d-a58f-0fa5712d1d84".device = "/dev/disk/by-uuid/4e5782b7-f468-438d-a58f-0fa5712d1d84";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/430C-3F08";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
